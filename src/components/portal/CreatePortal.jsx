import { useState } from 'react';
import axiosInstance from '../../services/axiosInstance';

function CreatePortal() {
  const [name, setName] = useState('');
  const [description, setDescription] = useState('');
  const [message, setMessage] = useState('');
  const [error, setError] = useState('');

  const validateName = name => {
    if (!name.trim()) {
      return '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
    }
    if (name.length > 255) {
      return '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 255 —Å–∏–º–≤–æ–ª–æ–≤';
    }
    if (description.length > 2500) {
      return '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 2500 —Å–∏–º–≤–æ–ª–æ–≤';
    }
    return '';
  };

  const formatServerError = err => {
    const data = err.response?.data;

    if (typeof data === 'object') {
      if (data["–°–æ–æ–±—â–µ–Ω–∏–µ"]) {
        return data["–°–æ–æ–±—â–µ–Ω–∏–µ"];
      }
      return <pre>{JSON.stringify(data, null, 2)}</pre>;
    }

    if (typeof data === 'string') {
      return data;
    }

    if (err.response?.status === 418) {
      return '–õ–∏–º–∏—Ç –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ—Ä—Ç–∞–ª–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç. –î–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.';
    }

    return (
        <>
          ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–∞ —Å–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ü—Ä–æ—Å—Ç–æ <a href="/login">–≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ</a>.
        </>
    );
  };

  const handleSubmit = async e => {
    e.preventDefault();
    setMessage('');
    setError('');

    const nameError = validateName(name);
    if (nameError) {
      setError(nameError);
      return;
    }

    try {
      const res = await axiosInstance.post('/api/v1/portals', {
        name,
        description,
      });

      setMessage(res.data.message || '–ü–æ—Ä—Ç–∞–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      setName('');
      setDescription('');

      // üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
      window.location.reload();

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ä—Ç–∞–ª–∞:', err);
      setError(formatServerError(err));
    }
  };

  return (
      <div className="mt-4">
        <h3>–°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç–∞–ª</h3>
        <form onSubmit={handleSubmit}>
          <div className="mb-3">
            <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
            <input
                type="text"
                className="form-control"
                value={name}
                onChange={e => setName(e.target.value)}
                required
            />
          </div>

          <div className="mb-3">
            <label className="form-label">–û–ø–∏—Å–∞–Ω–∏–µ</label>
            <textarea
                className="form-control"
                value={description}
                onChange={e => setDescription(e.target.value)}
            />
          </div>

          <button type="submit" className="btn btn-primary">
            –°–æ–∑–¥–∞—Ç—å
          </button>
        </form>

        {message && <div className="alert alert-–£—Å–ø–µ—à–Ω–æ mt-3">{message}</div>}
        {error && <div className="alert alert-danger mt-3">{error}</div>}
      </div>
  );
}

export default CreatePortal;
